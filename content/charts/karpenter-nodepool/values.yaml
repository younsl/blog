
globalLabels: {}

globalAnnotations: {}

nodePool:
  default:
    labels: {}

    annotations: {}

    nodeClassRef: {}
      # group: karpenter.k8s.aws
      # kind: EC2NodeClass
      # name: default

    taints: []

    startupTaints: []

    requirements: []
      # - key: "kubernetes.io/os"
      #   operator: In
      #   values: ["linux"]
      # - key: "kubernetes.io/arch"
      #   operator: In
      #   values: ["amd64"]
      # - key: "karpenter.sh/capacity-type"
      #   operator: In
      #   values: ["on-demand"]
      # - key: "karpenter.k8s.aws/instance-category"
      #   operator: In
      #   values: ["m", "r"]
      # - key: "karpenter.k8s.aws/instance-family"
      #   operator: In
      #   values: ["m7i-flex", "r7i"]
      # - key: "karpenter.k8s.aws/instance-cpu"
      #   operator: In
      #   values: ["4", "8", "16"]
      # - key: "karpenter.k8s.aws/instance-generation"
      #   operator: Gt
      #   values: ["5"]
      # - key: "topology.kubernetes.io/zone"
      #   operator: In
      #   values: ["ap-northeast-2a", "ap-northeast-2c"]

    kubelet: {}
  
    disruption:
      consolidationPolicy: WhenEmptyOrUnderutilized
      
      consolidateAfter: 1m

      budgets: []
        # - nodes: "10%"
        # - nodes: "0"
        #   schedule: "@daily"
        #   duration: 10m
      
    # Resource limits constrain the total size of the cluster.
    # Limits prevent Karpenter from creating new instances once the limit is exceeded.
    limits: {}
      # cpu: 150
      # memory: 220Gi
    
    # Priority given to the NodePool when the scheduler considers which NodePool
    # weight: ""

ec2NodeClass:
  default:
    # Required, resolves a default ami and userdata
    # Available values: AL2, AL2023, Bottlerocket, Windows2019, Windows2022, Custom
    amiFamily: AL2023
    
    # Required, discovers subnets to attach to instances
    subnetSelectorTermsTags: {}
      # karpenter.sh/discovery: <CLUSTER_NAME>

    # Required, discovers security groups to attach to instances
    securityGroupSelectorTermsTags: {}
      # karpenter.sh/discovery: <CLUSTER_NAME>
  
    # Optional, IAM role to use for the node identity.
    # The "role" field is immutable after EC2NodeClass creation. This may change in the 
    # future, but this restriction is currently in place today to ensure that Karpenter 
    # avoids leaking managed instance profiles in your account.
    # Must specify one of "role" or "instanceProfile" for Karpenter to launch nodes
    role: null
    # role: KarpenterNodeRole-example-eks-cluster

    # Optional, IAM instance profile to use for the node identity.
    # Must specify one of "role" or "instanceProfile" for Karpenter to launch nodes
    instanceProfile: "" 
  
    # Optional, discovers amis to override the amiFamily's default
    amiSelectorTerms:
      name: null
      # armAMIid:
      # amdAMIid:
      # gpuAMIid:

      # Automatically upgrade when a new AL2
      # name: "amazon-eks-node-al2023-x86_64-standard-1.30-*"
    
    # Optional, propagates tags to underlying EC2 resources
    tags: {}
      # ProvisionedBy: karpenter
      # Name: example-eks-cluster-default-karpenter-node

    # Optional, configures IMDS for the instance
    metadataOptions: {}
      # httpEndpoint: enabled
      # httpProtocolIPv6: disabled
      # httpPutResponseHopLimit: 2
      # httpTokens: required

    # Optional, configures storage devices for the instance
    blockDeviceMappings: []
      # - deviceName: /dev/xvda
      #   ebs:
      #     volumeSize: 30Gi
      #     volumeType: gp3
      #     iops: 4500
      #     throughput: 300

    # Optional, overrides autogenerated userdata with a merge semantic
    userData: ""
    # userData: |-
    #   echo "Hello world"

    # detailedMonitoring: false
    # associatePublicIPAddress: false
